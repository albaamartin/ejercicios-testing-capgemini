package com.capgemini.selenium;// Generated by Selenium IDE

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class NavegacionChromeTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() throws MalformedURLException {
    System.setProperty("webdriver.chrome.driver","C:\\Users\\amartino\\OneDrive - Capgemini\\Desktop\\ChromeDriver\\chromedriver.exe");
    driver = new ChromeDriver();
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testNavegacionChrome() {
    // Test name: NavegacionChrome
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.freecodecamp.org/");
    // 2 | setWindowSize | 1936x1056 | 
    driver.manage().window().setSize(new Dimension(1936, 1056));
    // 3 | click | css=.menu-btn-text | 
    driver.findElement(By.cssSelector(".menu-btn-text")).click();
    // 4 | click | linkText=Curriculum | 
    driver.findElement(By.linkText("Curriculum")).click();
    // 5 | click | css=.intro-description |
    //Esto es un wait explicito, expectedconditions.(puedo buscar varias opciones, ej:clickable)
    /*WebElement firstResult = new WebDriverWait(driver, Duration.ofSeconds(10))
            .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".intro-description")));*/
    driver.findElement(By.cssSelector(".intro-description")).click();
    // 6 | assertText | css=strong | Please slow down and read this.
    assertEquals("Please slow down and read this.", driver.findElement(By.cssSelector("strong")).getText());
  }
}
